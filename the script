-- v1rusxeno Helper GUI with Aimbot, ESP, Speed Boost and TeamCheck Button

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService") -- fixed name
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- GUI creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "v1rusxenoHelperGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame (draggable)
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 280, 0, 220)
MainFrame.Position = UDim2.new(0.5, -140, 0.5, -110)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
MainFrame.Active = true
MainFrame.Draggable = true

-- Title label
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Title.BorderSizePixel = 0
Title.Text = "v1rusxeno Helper"
Title.TextColor3 = Color3.fromRGB(0, 255, 0)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 20
Title.Parent = MainFrame

-- Utility function to create buttons
local function createButton(text, position)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 120, 0, 40)
    btn.Position = position
    btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    btn.BorderSizePixel = 0
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(150, 150, 150)
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 18
    btn.AutoButtonColor = true
    btn.Parent = MainFrame
    return btn
end

-- Create Buttons
local AimbotButton = createButton("Aimbot: OFF", UDim2.new(0, 10, 0, 40))
local ESPButton = createButton("ESP: OFF", UDim2.new(0, 150, 0, 40))
local TeamCheckButton = createButton("TeamCheck: OFF", UDim2.new(0, 10, 0, 90))

-- Speed boost label
local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(0, 260, 0, 20)
SpeedLabel.Position = UDim2.new(0, 10, 0, 135)
SpeedLabel.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
SpeedLabel.BorderSizePixel = 0
SpeedLabel.Text = "CFrame Speed Boost: 0"
SpeedLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
SpeedLabel.Font = Enum.Font.SourceSans
SpeedLabel.TextSize = 16
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
SpeedLabel.Parent = MainFrame

-- Speed boost slider frame
local SliderFrame = Instance.new("Frame")
SliderFrame.Size = UDim2.new(0, 260, 0, 15)
SliderFrame.Position = UDim2.new(0, 10, 0, 160)
SliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
SliderFrame.BorderSizePixel = 0
SliderFrame.Parent = MainFrame

-- Slider button (handle)
local SliderHandle = Instance.new("ImageButton")
SliderHandle.Size = UDim2.new(0, 20, 1, 0)
SliderHandle.Position = UDim2.new(0, 0, 0, 0)
SliderHandle.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
SliderHandle.BorderColor3 = Color3.fromRGB(0, 200, 0)
SliderHandle.BorderSizePixel = 1
SliderHandle.AutoButtonColor = false
SliderHandle.Parent = SliderFrame

-- Variables for states
local aimbotEnabled = false
local espEnabled = false
local speedBoostValue = 0
local teamCheckEnabled = false
local lockedTarget = nil -- Store current locked target

-- Aimbot Implementation
local mouse = LocalPlayer:GetMouse()
local runService = RunService

local function getClosestTarget()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            if not teamCheckEnabled or (LocalPlayer.Team ~= player.Team) then
                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                    if onScreen then
                        local dist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                        if dist < shortestDistance then
                            shortestDistance = dist
                            closestPlayer = player
                        end
                    end
                end
            end
        end
    end

    return closestPlayer
end

local rightMouseDown = false

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        rightMouseDown = true
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessedEvent)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        rightMouseDown = false
        lockedTarget = nil -- Release target lock on mouse button release
    end
end)

-- ESP Implementation
local boxAdorns = {}

local function createBox(part)
    local adorn = Instance.new("BoxHandleAdornment")
    adorn.Adornee = part
    adorn.Size = part.Size
    adorn.Transparency = 0.2
    adorn.Color3 = Color3.fromRGB(0, 255, 0)
    adorn.AlwaysOnTop = true
    adorn.ZIndex = 2
    adorn.Parent = part
    return adorn
end

local function updateESP()
    for p, adorn in pairs(boxAdorns) do
        if adorn and adorn.Parent then
            adorn:Destroy()
        end
        boxAdorns[p] = nil
    end

    if not espEnabled then return end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local root = player.Character.HumanoidRootPart
            if root then
                local adorn = createBox(root)
                boxAdorns[player] = adorn
            end
        end
    end
end

-- Speed Boost Implementation
local speedRunConn = nil

local function applySpeedBoost(value)
    if speedRunConn then
        speedRunConn:Disconnect()
        speedRunConn = nil
    end

    speedRunConn = runService.Stepped:Connect(function()
        local char = LocalPlayer.Character
        if not char then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        local moveDir = Vector3.new()

        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveDir = moveDir + (hrp.CFrame.LookVector)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveDir = moveDir - (hrp.CFrame.LookVector)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDir = moveDir - (hrp.CFrame.RightVector)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDir = moveDir + (hrp.CFrame.RightVector)
        end

        if moveDir.Magnitude > 0 then
            local speedVector = moveDir.Unit * value
            hrp.CFrame = hrp.CFrame + speedVector
        end
    end)
end

-- Button click handlers
AimbotButton.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    if aimbotEnabled then
        AimbotButton.Text = "Aimbot: ON"
    else
        AimbotButton.Text = "Aimbot: OFF"
        lockedTarget = nil
    end
end)

ESPButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    if espEnabled then
        ESPButton.Text = "ESP: ON"
    else
        ESPButton.Text = "ESP: OFF"
        updateESP()
    end
end)

TeamCheckButton.MouseButton1Click:Connect(function()
    teamCheckEnabled = not teamCheckEnabled
    if teamCheckEnabled then
        TeamCheckButton.Text = "TeamCheck: ON"
    else
        TeamCheckButton.Text = "TeamCheck: OFF"
    end
end)

-- Slider dragging to adjust speed boost
local dragging = false
local dragInput, dragStart, startPos

local function updateSliderPosition(input)
    local xPos = math.clamp(input.Position.X - SliderFrame.AbsolutePosition.X, 0, SliderFrame.AbsoluteSize.X)
    local percent = xPos / SliderFrame.AbsoluteSize.X
    SliderHandle.Position = UDim2.new(percent, -SliderHandle.AbsoluteSize.X/2, 0, 0)
    speedBoostValue = math.floor(percent * 100)
    SpeedLabel.Text = ("CFrame Speed Boost: %d"):format(speedBoostValue)
    applySpeedBoost(speedBoostValue * 0.1)
end

SliderHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = SliderHandle.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

SliderFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        updateSliderPosition(input)
    end
end)

-- Main aimbot loop with snap aiming (no smoothing)
runService.RenderStepped:Connect(function()
    if aimbotEnabled and rightMouseDown then
        if not lockedTarget then
            lockedTarget = getClosestTarget()
        end

        if lockedTarget and lockedTarget.Character and lockedTarget.Character:FindFirstChild("Head") then
            local headPos = lockedTarget.Character.Head.Position
            local camPos = Camera.CFrame.Position
            local targetCFrame = CFrame.new(camPos, headPos)
            -- Snap directly to the target (smoothing = 0)
            Camera.CFrame = targetCFrame
        else
            lockedTarget = nil
        end
    end

    if espEnabled then
        updateESP()
    end
end)

print("v1rusxeno Helper GUI loaded.")
